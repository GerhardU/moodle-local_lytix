{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Open Educational Resources Plugin\n *\n * @author     Natalie Kukovetz\n * @copyright  2022 Educational Technologies, Graz, University of Technology\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as ModalFactory from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport * as Fragment from 'core/fragment';\n\nconst showForm = (setting) => {\n    let args = {setting};\n    let context = 1;\n    let form = Fragment.loadFragment('local_lytix', 'courselistform', context, args);\n\n    form.done(function() {\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: setting,\n            body: form,\n        }).then(function(modal) {\n            modal.setLarge();\n            modal.show();\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.destroy();\n            });\n            modal.getRoot().on(ModalEvents.save, function() {\n                var formData = modal.getRoot().find('form').serialize();\n                let saveargs = {\n                    params: formData\n                };\n                Fragment.loadFragment('local_lytix', 'courselistformsave', 1, saveargs);\n                location.reload(); // TODO clean reload without question.\n            });\n            return; // For eslint.\n        }).catch(function(error) {\n            window.console.debug(error);\n        });\n    });\n};\n\nexport const initListener = () => {\n    let element = document.getElementById(\"courselist\");\n\n    // Update christian 20.10.2022: do not add listener when object does not exist.\n    if (element === null) {\n        return;\n    }\n\n    element.addEventListener(\"click\", function() {\n        showForm('courselist');\n    });\n};\n"],"names":["element","document","getElementById","addEventListener","setting","args","form","Fragment","loadFragment","done","ModalFactory","create","type","types","SAVE_CANCEL","title","body","then","modal","setLarge","show","getRoot","on","ModalEvents","hidden","destroy","save","saveargs","params","find","serialize","location","reload","catch","error","window","console","debug","showForm"],"mappings":";;;;;;;+PA0D4B,SACpBA,QAAUC,SAASC,eAAe,cAGtB,OAAZF,SAIJA,QAAQG,iBAAiB,SAAS,WAvCpBC,CAAAA,cACVC,KAAO,CAACD,QAAAA,SAERE,KAAOC,SAASC,aAAa,cAAe,iBADlC,EAC6DH,MAE3EC,KAAKG,MAAK,WACNC,aAAaC,OAAO,CAChBC,KAAMF,aAAaG,MAAMC,YACzBC,MAAOX,QACPY,KAAMV,OACPW,MAAK,SAASC,OACbA,MAAMC,WACND,MAAME,OACNF,MAAMG,UAAUC,GAAGC,YAAYC,QAAQ,WACnCN,MAAMO,aAEVP,MAAMG,UAAUC,GAAGC,YAAYG,MAAM,eAE7BC,SAAW,CACXC,OAFWV,MAAMG,UAAUQ,KAAK,QAAQC,aAI5CvB,SAASC,aAAa,cAAe,qBAAsB,EAAGmB,UAC9DI,SAASC,eAGdC,OAAM,SAASC,OACdC,OAAOC,QAAQC,MAAMH,cAczBI,CAAS"}